name: app sec CI

on:
  push:

jobs:
  build:

    runs-on: ubuntu-latest
    
    steps:
      - name: Check out repo
        uses: actions/checkout@v2
      - name: Install
        run: npm install
        
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      
      - name: Create temp directory
        run: cd ~; mkdir -p POLARIS_HOME; mkdir -p DETECT_JAR_DOWNLOAD_DIR

      - name: Set outputs
        id: vars
        run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
      - name: Check outputs
        run: echo ${{ steps.vars.outputs.sha_short }}
      
      - name: Polaris
        uses: blackducksoftware/github-action@2.0.0
        env:
          POLARIS_HOME: ~/POLARIS_HOME
          DETECT_JAR_DOWNLOAD_DIR: ~/DETECT_JAR_DOWNLOAD_DIR
        with:
          args: '-d --polaris.url="${{secrets.POLARIS_URL}}" 
          --polaris.access.token="${{secrets.POLARIS_TOKEN}}"
          --detect.tools="POLARIS"'

      - name: Synopsys Detect
        uses: blackducksoftware/github-action@2.0.0
        with:
          args: '--blackduck.url="${{ secrets.BLACKDUCK_URL}}" 
                 --blackduck.api.token="${{ secrets.BLACKDUCK_API_TOKEN }}" 
                 --detect.project.name="${{ github.event.repository.name }}"
                 --detect.project.version.name="${{ steps.vars.outputs.sha_short }}"
                 --detect.policy.check.fail.on.severities=MAJOR
                 --detect.report.timeout=3000
                 --detect.risk.report.pdf=false'

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - uses: actions/cache@v2
        name: Configure pip caching
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - uses: actions/cache@v2
        name: Configure polaris caching
        with:
          path: ~/POLARIS_HOME
          key: '~/POLARIS_HOME/coverity-tools-*/VERSION.xml'

      - name: Install Python dependencies
        run: |
          python -m pip install -r requirements.txt
      - name: Update README
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          HUB_94_TOKEN: ${{ secrets.HUB_94_TOKEN }}
          PROJECT_NAME: ${{ github.event.repository.name }}
          PROJECT_VERSION: ${{ steps.vars.outputs.sha_short }}
          POLARIS_URL: ${{secrets.POLARIS_URL}}
          POLARIS_TOKEN: ${{secrets.POLARIS_TOKEN}}

        run: |-
          python update_readme.py
          cat README.md
          
      - name: Commit and push if changed
        run: |-
          git diff
          git config --global user.email "kk.shichao@gmail.com"
          git config --global user.name "whoissqr"
          git pull
          git add README.md
          git commit -m "Updated content" || exit 0
          git push
